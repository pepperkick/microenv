cluster:
  # Name of the cluster
  name: test-cluster

  networking:
    # Set the subnet for docker network
    # It will be "$ip_subnet.0/16"
    ip_subnet: "172.20.0"

  repositories:
    insecure:
      - https://ghcr.io
      - https://registry.k8s.io
      - https://quay.io

    # Any repositories listed under.machine.docker.repositories are automatically added
    private:
      - name: registry.com
        username: test
        password: test

  kinst:
    # Configure the kubernetes nodes for KINST
    # https://github.com/kubernetes-sigs/kind/releases for images
    image: kindest/node:v1.25.9@sha256:c08d6c52820aa42e533b70bce0c2901183326d86dcdcbedecc9343681db45161

    # Configure the machines to use for KINST.
    # Each machine must be accessible from where the scripts are running from to create docker swarm.
    # Each machine must be initialized with core-machine module to ensure all dependencies are present.
    # The first machine is always the manager machine.
    # It is required to run KINST only from manager machine.
    # The manager machine will contain the control-plane node
    machines:
      - name: manager
        docker: 10.10.10.10:2375
        nodes:
          - name: set1-test1
            labels:
              dedicated: components
              test: components
            taints:
              - key: "components"
                operator: "Equal"
                value: "true"
                effect: "NoSchedule"
            image: kindest/node:v1.25.9@sha256:c08d6c52820aa42e533b70bce0c2901183326d86dcdcbedecc9343681db45161
      - name: worker1
        docker: 10.10.10.11:2375
        nodes:
          - name: set2-test1